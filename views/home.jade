doctype html
html(lang="fi")
  head
    meta(name="viewport" content="width=device-width, initial-scale=1")
  body
    h1 Onneksi olkoon!
    h2 Ja tervetuloa katsomaan streamia! :):):):):):)
    
    video(autoplay controls style="max-width:100%;")
    
    script.
        function stopStream(){
            var video = document.querySelector('video');
            video.src = "";
            
            client.close();
            
            delete mediaSource;
            delete sourceBuffer;
        }
    
    button(onclick="stopStream()") Stop stream
    
    script(src="/js/binaryjs.js")
    
    script.
        var queue = [];
        var updateInd = 0;
        var video = document.querySelector('video');
        var mediaSource = new MediaSource();
        var client = new BinaryClient('WSS://roninnode-ronipa.c9users.io/stream');
        
        var videoURL = window.URL.createObjectURL(mediaSource);
        video.src = videoURL;
        
        function playVideo(){
            mediaSource.endOfStream();
            video.play();
        }
        
        mediaSource.addEventListener('sourceopen', function(e) {
            console.log('MediaSource opened.');
            
            var mimeType = 'video/webm; codecs=vp8';
            
            if (MediaSource.isTypeSupported(mimeType)) {
                sourceBuffer = mediaSource.addSourceBuffer(mimeType);
                sourceBuffer.mode = 'sequence'; // 'segments' will order by timestamp
                sourceBuffer.timestampOffset = 0.033;
                
                sourceBuffer.addEventListener('updateend', function(e){
                    console.log("Buffer updated");
                });
                
            } else console.log(mimeCodec +' mimecodec not supported');
        }, false);
        
        mediaSource.addEventListener('sourceclose', function(e){
            console.log("MediaSource closed.");
        });
        
        mediaSource.addEventListener('error', function(e){
            console.log("Error: " + mediaSource.readyState );
        });
        
        client.on('open', function(){
            console.log("yhdistetty");
            client.createStream({event: 'request'});
        });
        
        client.on('stream', function(stream, meta){
            stream.on('data', function(data){
                if (typeof data !== 'string') {
                    console.log("Dataa vastaanotettu: "+ data);
                    
                    queue.push(new Uint8Array(data));
                    appendBlob(0);
                }
            });
            
            stream.on('end', function(){
                stream.write({ end: true });
            });
        });
        
        function appendBlob(e){
            console.log('Blobeja jonossa: ' + queue.length + ', Video readyState: '+ video.readyState);
            
            if (queue.length > 0 && !sourceBuffer.updating) {
                sourceBuffer.appendBuffer(queue.shift());
                console.log('Uint8Array appended to buffer');
            }
        }